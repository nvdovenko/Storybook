import{r as B,R as se}from"./index-9yPe82QC.js";const E=({data:c,labels:x=[],colors:C,showPointerLines:M=!1,maxWidth:re=80,showPercentages:oe=!1,gapSize:R=0,border:ne=!1})=>{const q=B.useRef(null);return B.useEffect(()=>{const y=q.current;if(y){const e=y.getContext("2d");if(e){const L=c.reduce((P,d)=>P+d,0);let l=0;const D=R*Math.PI/180;e.clearRect(0,0,y.width,y.height),c.forEach((P,d)=>{const w=P/L*2*Math.PI-D;e.beginPath(),e.moveTo(200,200),e.arc(200,200,100,l,l+w),e.fillStyle=C[d%C.length],e.fill(),ne&&(e.strokeStyle="#000",e.lineWidth=.5,e.stroke());const V=l+w/2;if(oe){const r=(P/L*100).toFixed(1)+"%",A=200+Math.cos(V)*60,T=200+Math.sin(V)*60;e.fillStyle="#000",e.font="10px Nunito Sans",e.textAlign="center",e.textBaseline="middle",e.fillText(r,A,T)}if(x.length>0&&x[d]){const r=l+w/2,A=x[d],T=110,_=T+Math.min(A.length*2,140-T),S=200+Math.cos(r)*_,k=200+Math.sin(r)*_;if(e.fillStyle="#000",e.font="14px Nunito Sans",e.textAlign=S>200?"left":"right",e.textBaseline="middle",M){const t=200+Math.cos(r)*100,a=200+Math.sin(r)*100,W=.8,ce=S-t,le=k-a,de=t+ce*W,he=a+le*W;e.beginPath(),e.moveTo(t,a),e.lineTo(de,he),e.strokeStyle="#000",e.lineWidth=.5,e.stroke()}const z=16,ie=A.split(" ");let s="";const v=[];ie.forEach(t=>{const a=s?`${s} ${t}`:t;e.measureText(a).width>re?(v.push(s),s=t):s=a}),s&&v.push(s),v.forEach((t,a)=>{e.fillText(t,S,k+a*z-(v.length-1)*(z/2))})}l+=w+D})}}},[c,x,C,M,R]),se.createElement("canvas",{ref:q,width:400,height:400})};E.__docgenInfo={description:"",methods:[],displayName:"PieChart",props:{data:{required:!0,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"",defaultValue:{value:"[]",computed:!1}},colors:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},showPointerLines:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},maxWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"80",computed:!1}},showPercentages:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},gapSize:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},border:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};const me={title:"Components/Data visualisation/Pie chart",component:E,tags:["autodocs"],argTypes:{showPointerLines:{control:"boolean",description:"Controls whether pointer lines are displayed to indicate the segments of the pie chart."},showPercentages:{control:"boolean",description:"Controls whether the percentage values are displayed on the pie chart segments."},gapSize:{control:"number",description:"Defines the gap size between the pie chart segments. A value of 0 means no gap, while higher values create larger gaps."},maxWidth:{control:"number",description:"Sets the maximum width of the labels. If the label text is longer than this value, it will pass to the next line."},data:{description:"An array of numerical values representing the data for the pie chart segments. Each value corresponds to the size of a segment."},labels:{description:"An array of labels for the pie chart segments. Each label corresponds to the data in the same position in the `data` array."},colors:{description:"An array of colors for the pie chart segments. Each color corresponds to the segment in the same position as the `data` array."},border:{description:"Controls whether a border is drawn around the pie chart segments.",control:"boolean"}}},o=c=>se.createElement(E,{...c}),n=[300,200,40,100],b=["Agree","Disagree","More agree","More disagree"],i=["#E0AC9D","#996888","#A37774","#C99DA3"],h=o.bind({});h.args={data:n,colors:i};const p=o.bind({});p.args={data:n,labels:b,colors:i};const u=o.bind({});u.args={data:n,labels:b,colors:i,showPointerLines:!0};const m=o.bind({});m.args={data:n,labels:b,colors:i,showPercentages:!0};const g=o.bind({});g.args={data:n,labels:b,colors:i,showPercentages:!0,border:!0};const f=o.bind({});f.args={data:n,labels:b,colors:i,showPercentages:!0,gapSize:2};var I,X,Y;h.parameters={...h.parameters,docs:{...(I=h.parameters)==null?void 0:I.docs,source:{originalSource:"args => <PieChart {...args} />",...(Y=(X=h.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var N,F,G;p.parameters={...p.parameters,docs:{...(N=p.parameters)==null?void 0:N.docs,source:{originalSource:"args => <PieChart {...args} />",...(G=(F=p.parameters)==null?void 0:F.docs)==null?void 0:G.source}}};var $,H,O;u.parameters={...u.parameters,docs:{...($=u.parameters)==null?void 0:$.docs,source:{originalSource:"args => <PieChart {...args} />",...(O=(H=u.parameters)==null?void 0:H.docs)==null?void 0:O.source}}};var j,J,K;m.parameters={...m.parameters,docs:{...(j=m.parameters)==null?void 0:j.docs,source:{originalSource:"args => <PieChart {...args} />",...(K=(J=m.parameters)==null?void 0:J.docs)==null?void 0:K.source}}};var Q,U,Z;g.parameters={...g.parameters,docs:{...(Q=g.parameters)==null?void 0:Q.docs,source:{originalSource:"args => <PieChart {...args} />",...(Z=(U=g.parameters)==null?void 0:U.docs)==null?void 0:Z.source}}};var ee,te,ae;f.parameters={...f.parameters,docs:{...(ee=f.parameters)==null?void 0:ee.docs,source:{originalSource:"args => <PieChart {...args} />",...(ae=(te=f.parameters)==null?void 0:te.docs)==null?void 0:ae.source}}};const ge=["Default","WithLabels","WithPointerLines","WithPercentages","WithBorder","WithGap"];export{h as Default,g as WithBorder,f as WithGap,p as WithLabels,m as WithPercentages,u as WithPointerLines,ge as __namedExportsOrder,me as default};
